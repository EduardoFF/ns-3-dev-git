#Default configuration file for ns3
seed = 654
nodes = 40
[wireless]
[./phy]
RxGain = 0.0
DataLinkType = 802.11
txPowerStart = -18.0 #-8.1
txPowerEnd = -18.0 #-8.1
EnergyDetectionThreshold = -96
CcaMode1Threshold = -99

[../channel]
propagationDelay = ns3::ConstantSpeedPropagationDelayModel
propagationLoss = ns3::TwoRayGroundPropagationLossModel
lambda = 0.125
systemLoss = 1.0
heightAboveZ = 1.5

[../mac]
#Invalid-WifiMode, DsssRate1Mbps,DsssRate2Mbps,DsssRate5_5Mbps,DsssRate11Mbps,OfdmRate6Mbps,OfdmRate9Mbps,OfdmRate12Mbps
#OfdmRate18Mbps,OfdmRate24Mbps,OfdmRate36Mbps,OfdmRate48Mbps,OfdmRate54Mbps,OfdmRate3MbpsBW10MHz,OfdmRate4_5MbpsBW10MHz
#OfdmRate6MbpsBW10MHz,OfdmRate9MbpsBW10MHz,OfdmRate12MbpsBW10MHz,OfdmRate18MbpsBW10MHz,OfdmRate24MbpsBW10MHz,OfdmRate27MbpsBW10MHz
#OfdmRate1_5MbpsBW5MHz,OfdmRate2_25MbpsBW5MHz,OfdmRate3MbpsBW5MHz,OfdmRate4_5MbpsBW5MHz,OfdmRate6MbpsBW5MHz, OfdmRate9MbpsBW5MHz
#OfdmRate12MbpsBW5MHz,OfdmRate13_5MbpsBW5MHz

remoteStationManager = ns3::ConstantRateWifiManager
dataMode = OfdmRate6Mbps
controlMode = OfdmRate6Mbps
type = ns3::AdhocWifiMac


[]
[mobility]
model = argos

[routing]
protocol = AODV #Valid values {AODV}
[./aodv]
#all time values are expressed in nanoseconds
#HELLO messages emission interval. 
HelloInterval = 1000500000 #1 seconds

#Maximum number of retransmissions of RREQ to discover a route 
RreqRetries = 2

#Maximum number of RREQ per second. 
RreqRateLimit = 10

#Conservative estimate of the average one hop traversal time for packets and should include queuing delays, interrupt processing times and transfer times. 
NodeTraversalTime = 40000000

#Period of our waiting for the neighbour's RREP_ACK = 10 ms + NodeTraversalTime 
NextHopWait = 50000000

#Period of time during which the route is considered to be valid 
ActiveRouteTimeout = 3000000000

#Value of lifetime field in RREP generating by this node = 2 * max(ActiveRouteTimeout, PathDiscoveryTime) 
MyRouteTimeout = 11199999999

#Time for which the node is put into the blacklist = RreqRetries * NetTraversalTime 
BlackListTimeout = 5599999999

# DeletePeriod is intended to provide an upper bound on the time for which an upstream node A 
# can have a neighbor B as an active next hop for destination D, while B has invalidated the 
# route to D. = 5 * max (HelloInterval, ActiveRouteTimeout)  
DeletePeriod = 15000000000

# Its purpose is to provide a buffer for the timeout so that if the RREP is delayed due 
# to congestion, a timeout is less likely to occur while the RREP is still en route back to the source. 
TimeoutBuffer = 5

#Net diameter measures the maximum possible number of hops between two nodes in the network 
NetDiameter = 35

#Estimate of the average net traversal time = 2 * NodeTraversalTime * NetDiameter 
NetTraversalTime = 2799999999

#Estimate of maximum time needed to find route in network = 2 * NetTraversalTime 
PathDiscoveryTime = 5599999999

#Maximum number of packets that we allow a routing protocol to buffer. 
MaxQueueLen = 64

#Maximum time packets can be queued (in nanoseconds) 
#MaxQueueTime = 30000000000
MaxQueueTime = 30000000000

#Number of hello messages which may be loss for valid link. 
AllowedHelloLoss = 2

#Indicates whether a gratuitous RREP should be unicast to the node originated route discovery. 
GratuitousReply = true

#Indicates only the destination may respond to this RREQ. 
DestinationOnly = false

#Indicates whether a hello messages enable. 
EnableHello = true          

#Indicates whether a broadcast data packets forwarding enable. 
EnableBroadcast = true

[argos]
portBase = 9999

[simulation]
udpPort = 1025

[./scenario]
x = 1000
y = 1000
